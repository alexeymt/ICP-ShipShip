service: () -> {
    agreeToMarry: () -> ();
    checkCompatibility: (text, text) -> (opt record {weaknesses:vec text; strengths:vec text; compatibility:text}) query;
    getAppVersion: () -> (text) query;
    getPartnerInfo: (principal) -> (opt record {id:principal; name:opt text; wedding:text; isAgreed:bool}) query;
    getWeddingInfoOf: (principal) -> (opt record {id:text; hadAt:nat; partner1:record {id:principal; name:opt text; wedding:text; isAgreed:bool}; partner2:record {id:principal; name:opt text; wedding:text; isAgreed:bool}; ring1:record {token_id:nat64; data:text}; ring2:record {token_id:nat64; data:text}}) query;
    matchPartner: (text, principal) -> ();
    mintNft: (text, principal) -> ();
    setRing: (text, principal) -> () query;
}
